<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>dats</string>
		<string>sats</string>
		<string>hats</string>
	</array>
	<key>name</key>
	<string>ATS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment_rest</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment_block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#where</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quantifier_square</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quantifier_arrow</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quantifier_curly</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(extern|symintr|overload|exception)\b</string>
			<key>name</key>
			<string>keyword.other.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(staload|dynload)\b</string>
			<key>name</key>
			<string>keyword.other.load.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(fun|fn|prfun|prfn|implement|fnx|castfn|praxi)\b</string>
			<key>name</key>
			<string>keyword.other.fun.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(val|prval)\b</string>
			<key>name</key>
			<string>keyword.other.val.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(assume|abstype|abst@ype|absprop|absview|absvtype|absviewtype|absviewt@ype|absvt@ype)\b</string>
			<key>name</key>
			<string>keyword.other.abstype.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(datatype|dataprop|dataview|dataviewtype|datavtype)\b</string>
			<key>name</key>
			<string>keyword.other.datatype.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(stadef|sortdef|typedef|propdef|viewdef|viewtypedef|vtypedef)\b</string>
			<key>name</key>
			<string>keyword.other.typedef.ats</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(let|of|with|in|end|and|where|if|then|else|case|local)\b</string>
			<key>name</key>
			<string>keyword.other.long.ats</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment_block</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\(\*</string>
			<key>end</key>
			<string>\*\)</string>
			<key>name</key>
			<string>comment.block.ats</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
			</array>
		</dict>
		<key>comment_line</key>
		<dict>
			<key>name</key>
			<string>comment.line.ats</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash.ats</string>
				</dict>
			</array>
		</dict>
		<key>comment_rest</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>////</string>
			<key>end</key>
			<string>.\z</string>
			<key>name</key>
			<string>comment.rest.ats</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>.*</string>
					<key>name</key>
					<string>comment.block.ats</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>match</key>
			<string>(\!|&amp;|\?|==&gt;|=&gt;|=|\-&gt;|\-\-&gt;|\&lt;|\&gt;|:=|\+|\-|\*|/|\~|\||\$)</string>
			<key>name</key>
			<string>keyword.operator.ats</string>
		</dict>
		<key>quantifier_arrow</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)</string>
			<key>end</key>
			<string>(&gt;)</string>
			<key>name</key>
			<string>variable.parameter.ats</string>
		</dict>
		<key>quantifier_curly</key>
		<dict>
			<key>begin</key>
			<string>({)</string>
			<key>end</key>
			<string>(})</string>
			<key>name</key>
			<string>variable.parameter.ats</string>
		</dict>
		<key>quantifier_square</key>
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>name</key>
			<string>variable.parameter.ats</string>
		</dict>
		<key>special</key>
		<dict>
			<key>match</key>
			<string>(#|\$)(\w*)\b</string>
			<key>name</key>
			<string>keyword.other.special.ats</string>
		</dict>
		<key>string</key>
		<dict>
			<key>match</key>
			<string>"[^"]*"</string>
			<key>name</key>
			<string>string.double-quote.ats</string>
		</dict>
		<key>where</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(where)(\s)*({)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.ats</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(})</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.ats</string>
	<key>uuid</key>
	<string>c3b7ee53-6117-4cdf-80ea-d0572e54aed7</string>
</dict>
</plist>
